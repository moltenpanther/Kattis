import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Queens {

	static int count = 0;
	
    public static void main(String[] args) throws IOException {
    	
    //	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\molte\\eclipse-workspace\\Kattis\\bin\\input.txt"));
        
        int size = 8;
        
        int[] queens = new int[size];
        placeQueens(queens, 0, size);
	    
        // Output
    	System.out.println("COUNT: " + count);
   		
    	br.close();
    }
    
    public static void placeQueens(int[] queens, int row, int size) {
        
    	if (row == size) {
            count++;
            printBoard(queens);
            return;
        }

        for (int i = 0; i < size; i++) {
            queens[row] = i;
            
            // Checks for valid placement
            boolean good = true;
            for (int j = 0; j < row; j++) {
            	
            	// Checks for threatening board positions
                if (queens[j] == queens[row] || Math.abs(queens[j] - queens[row]) == Math.abs(j - row)) {
                    good = false;
                    j = row;
                }
            }
            
            if (good) {
                placeQueens(queens, row + 1, size);
            }
        }
    }
    
    public static void printBoard(int[] queens) {
        
    	System.out.println("------------");
    	System.out.println(count + ": ");
    	int n = queens.length;
        for (int i = 0; i < n; i++) {
        	for (int j = 0; j < n; j++) {
                if (queens[i] == j) {
                    System.out.print("Q ");
                } else {
                    System.out.print(". ");
                }
            //    System.out.println("(" + i + " " + j + ")" + " -> " + queens[i]);
            }
            System.out.println();
        }
        System.out.println();
    }
}
